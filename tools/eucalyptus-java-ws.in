#!/bin/bash
#Copyright (c) 2009  Eucalyptus Systems, Inc.	
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by 
#the Free Software Foundation, only version 3 of the License.  
# 
#This file is distributed in the hope that it will be useful, but WITHOUT
#ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#for more details.  
#
#You should have received a copy of the GNU General Public License along
#with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
#Please contact Eucalyptus Systems, Inc., 130 Castilian
#Dr., Goleta, CA 93101 USA or visit <http://www.eucalyptus.com/licenses/> 
#if you need additional information or have any questions.
#
#This file may incorporate work covered under the following copyright and
#permission notice:
#
#  Software License Agreement (BSD License)
#
#  Copyright (c) 2008, Regents of the University of California
#  
#
#  Redistribution and use of this software in source and binary forms, with
#  or without modification, are permitted provided that the following
#  conditions are met:
#
#    Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
#    Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
#  OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. USERS OF
#  THIS SOFTWARE ACKNOWLEDGE THE POSSIBLE PRESENCE OF OTHER OPEN SOURCE
#  LICENSED MATERIAL, COPYRIGHTED MATERIAL OR PATENTED MATERIAL IN THIS
#  SOFTWARE, AND IF ANY SUCH MATERIAL IS DISCOVERED THE PARTY DISCOVERING
#  IT MAY INFORM DR. RICH WOLSKI AT THE UNIVERSITY OF CALIFORNIA, SANTA
#  BARBARA WHO WILL THEN ASCERTAIN THE MOST APPROPRIATE REMEDY, WHICH IN
#  THE REGENTSâ€™ DISCRETION MAY INCLUDE, WITHOUT LIMITATION, REPLACEMENT
#  OF THE CODE SO IDENTIFIED, LICENSING OF THE CODE SO IDENTIFIED, OR
#  WITHDRAWAL OF THE CODE CAPABILITY TO THE EXTENT NEEDED TO COMPLY WITH
#  ANY SUCH LICENSES OR RIGHTS.
#

#
# chkconfig: 2345 99 05
# description: script for starting and stopping eucalyptus java ws services
#
### BEGIN INIT INFO
# Provides:                   eucalyptus-WS
# Required-Start:             $remote_fs $syslog 
# Should-Start:               START
# Required-Stop:              $remote_fs $syslog 
# Default-Start:              2 3 4 5
# Default-Stop:	              0 1 6
# Short-Description:          Start Eucalyptus CONFNAME
# Description:                Start the Eucalyptus CONFNAME
# X-UnitedLinux-Default-Enabled: yes
### END INIT INFO
#

# Do NOT "set -e"

# we need to source the current path in case of manual intallation
export PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH
DESC="Eucalyptus CONFNAME"
NAME=WS
ANT="`which ant 2> /dev/null`"
JAVA="`which java 2> /dev/null`"
EUCA_USER="eucalyptus"

JAR_NAME="/usr/share/eucalyptus/eucalyptus-JARNAME-@EUCA_VERSION@.jar"
JAR_CLOUD="/usr/share/eucalyptus/eucalyptus-cloud-@EUCA_VERSION@.jar /usr/share/eucalyptus/eucalyptus-www-@EUCA_VERSION@.jar"
JAR_WALRUS="/usr/share/eucalyptus/eucalyptus-walrus-@EUCA_VERSION@.jar"
JAR_SC="/usr/share/eucalyptus/eucalyptus-storagecontroller-@EUCA_VERSION@.jar"

if [ "$EUID" != "0" ]; then
	echo "Eucalyptus init scripts must be run as root."
	exit 1
fi

# if we have lsb functions let's source them
WE_HAVE_LSB="N"
if [ -e /lib/lsb/init-functions ]; then
	. /lib/lsb/init-functions
	# very old lsb don't have the functions we need
	if type log_daemon_msg > /dev/null 2> /dev/null ; then
		WE_HAVE_LSB="Y"
	fi
fi

# honor the ENV variable if found otherwise look in root
if [ -z "$EUCALYPTUS" ] ; then
       EUCALYPTUS="@prefix@"
       if [ ! -e ${EUCALYPTUS}/etc/eucalyptus/eucalyptus.conf ] ; then 
              EUCALYPTUS="/"
       fi
fi

# Read configuration variable file if it is present
if [ -r $EUCALYPTUS/etc/eucalyptus/eucalyptus.conf ]; then
	EUCA_TMP="`readlink -f ${EUCALYPTUS}`"
	. $EUCALYPTUS/etc/eucalyptus/eucalyptus.conf

	# has eucalyptus been configured?
	if [ "$EUCALYPTUS" = "not_configured" ]; then
		echo "EUCALYPTUS not configured!" 
		exit 1
	fi

	# there may be inconsistencied between conf file and env variable
	if [ "$EUCA_TMP" != "`readlink -f ${EUCALYPTUS}`" ]; then
		echo "Warning: you should check EUCALYPTUS in conf file"
	fi
else
	echo "Cannot find eucalyptus configuration file!"
	exit 1
fi
export EUCALYPTUS

pidfile=$EUCALYPTUS/var/run/eucalyptus/eucalyptus-cloud.pid

# just a quick way to check if we have the package still installed: at
# times we can still have the init.d script
if [ ! -x $EUCALYPTUS/usr/sbin/euca_conf ]; then
	echo "Some eucalyptus components are missing"
	exit 1
fi

check_java() {
	java_min_version="1.6.0"

	# we need a good JAVA_HOME
	if [ -z "$JAVA_HOME" ]; then
		# user didn't setup JAVA_HOME, let's look for it
		if [ -z "$JAVA" ]; then
			echo "Cannot find java!"
			exit 1
		fi
		JAVA_HOME="`readlink -f $JAVA`"
		JAVA_HOME="`dirname $JAVA_HOME|sed 's:/jre/bin::'`"
		if [ ! -d $JAVA_HOME ]; then
			echo "Cannot find a good JAVA_HOME"
			exit 1
		fi
	fi
	
	# to be sure we are using the right java/JAVA_HOME
	JAVA="$JAVA_HOME/jre/bin/java"

	# let's see if we can find a decent java
	if [ -x "$JAVA" ]; then
		java_version=`$JAVA -version 2>&1 | grep "java version" | sed -e 's/.*java version "\(.*\)".*/\1/'`
		if [ `expr $java_version "<" $java_min_version` -eq 0 ]; then
			export JAVA_HOME
			return 
		fi
	fi

	echo "Eucalyptus needs java version >= $java_min_version"
	exit 1
}

do_start() {
	local ret

	# basic checks
	check_java
	
	cd $EUCALYPTUS/etc/eucalyptus

	OPTS=""
	if [ "$DISABLE_DNS" = "Y" ]; then
	    OPTS="$OPTS --remote-dns"
	elif [ "$DISABLE_EBS" = "Y" ]; then
	    OPTS="$OPTS --disable-ebs"
	fi

	$EUCALYPTUS/usr/sbin/eucalyptus-cloud $OPTS -h $EUCALYPTUS -u $EUCA_USER --pidfile ${pidfile} -f -o $EUCALYPTUS/var/log/eucalyptus/cloud-output.log >/dev/null 2>&1
	return $?
}

enable_disable_service() {
	local from_sfx=""
	local to_sfx=""
	local jar_list=""
	
	if [ "$1" = "enable" ]; then
		from_sfx=".disabled"
		to_sfx=""
		# we check before enabling the service otherwise we'd
		# prevent other services to start
		if ! $EUCALYPTUS/usr/sbin/euca_conf --check $NAME ; then
			exit 1
		fi
	elif [ "$1" = "disable" ]; then
		from_sfx=""
		to_sfx=".disabled"
	else
		echo "Unknown action ($action)!"
		exit 1
	fi

	case "$NAME" in
	cloud)
		jar_list="$JAR_CLOUD"
		;;
	walrus)
		jar_list="$JAR_WALRUS"
		;;
	sc)
		jar_list="$JAR_SC"
		;;
	*)
		echo "Unknown service ($NAME)!"
		exit 1
		;;
	esac

	for x in $jar_list ; do
		if [ -e ${EUCALYPTUS}${x}${from_sfx} ]; then
			if ! cp ${EUCALYPTUS}${x}${from_sfx} ${EUCALYPTUS}${x}${to_sfx} ; then
				echo "Failed to copy jar in place!"
				exit 1
			fi
			rm -f ${EUCALYPTUS}${x}${from_sfx}
		fi
	done
}

do_status() {
	if [ ! -e ${EUCALYPTUS}${JAR_NAME} ]; then
		# service is not running
		return 1
	fi

	if [ -s ${pidfile} ]; then
		pid=`cat ${pidfile} 2> /dev/null`
		if ps ax|grep $pid|grep eucalyptus-cloud.pid > /dev/null ; then
			# we are good
			return 0
		fi
	fi
	return 1
}

do_stop() {
	# now stop the service
	if [ -s "${pidfile}" ]; then
		pid=`cat $pidfile 2> /dev/null`
	else
		return
	fi

	# let's way few seconds than kill harder
	timeout=20
	while [ $timeout -gt 0 ]; do
		if do_status ; then
			sleep 1
			timeout=$(($timeout - 1))
		else
			break
		fi
	done
	if [ $timeout -eq 0 ]; then
		kill -9 $pid > /dev/null 2>&1 
	fi
	rm -f $pidfile
}

# let's get the user to use
if [ -z "$EUCA_USER" ] ; then
	EUCA_USER="root"
fi

# set the library path correctly
export LD_LIBRARY_PATH="$EUCALYPTUS/usr/lib/eucalyptus:$LD_LIBRARY_PATH"

case "$1" in
  start)
	if [ "$VERBOSE" != no ]; then
		if [ "$WE_HAVE_LSB" = "Y" ]; then
			log_daemon_msg "Starting $DESC" "eucalyptus-$NAME"
		else
			echo -n "Starting $DESC: "
		fi
	fi

	# let's check there is no previous cloud running
	if do_status ; then
		echo
		echo "another $DESC is already running!"
		if [ "$VERBOSE" != no ]; then
			if [ "$WE_HAVE_LSB" = "Y" ]; then
				log_end_msg 1
			fi
		fi
		exit 1
	fi

	# move the jar in the right place
	enable_disable_service enable

	# since other services could be running, we stop the container
	# before starting
	do_stop
	do_start
	case "$?" in
	0|1) 
		if [ "$VERBOSE" != no ]; then
			if [ "$WE_HAVE_LSB" = "Y" ]; then
				log_end_msg 0
			else
				echo "done."
			fi
		fi
		;;
	*)
		if [ "$VERBOSE" != no ]; then
			if [ "$WE_HAVE_LSB" = "Y" ]; then
				log_end_msg 1
			else
				echo "failed!"
			fi
		fi
		;;
	esac
	;;
  stop)
	if [ "$VERBOSE" != no ]; then
		if [ "$WE_HAVE_LSB" = "Y" ]; then
			log_begin_msg "Stopping $DESC"
		else
			echo -n "Stopping $DESC: "
		fi
	fi
	
	# if we don't have the JAR file we are not running
	if [ ! -e ${EUCALYPTUS}${JAR_NAME} ]; then
		# service is not running
		exit 0
	fi

	# let's stop the service before moving the jar
	do_stop

	enable_disable_service disable

	# if we have more services running, we'll need to restart
	__restart="N"
	for x in $JAR_CLOUD $JAR_WALRUS $JAR_SC ; do
		if [ -e ${EUCALYPTUS}/${x} ]; then
			__restart="Y"
			break
		fi
	done
	if [ ${__restart} = "Y" ]; then
		do_start
	fi
	if [ "$VERBOSE" != no ]; then
		if [ "$WE_HAVE_LSB" = "Y" ]; then
			log_end_msg 0
		else
			echo "done."
		fi
	fi
	;;
  restart)
	$0 stop
	$0 start
  	;;
  status)
	if do_status ; then
		echo "$DESC is running"
	else
		exit 3
	fi
	;;
  *)
	echo "Usage: eucalyptus-$NAME {start|stop|restart}" >&2
	exit 3
	;;
esac

:
