# Copyright 2016 Ent. Services Development Corporation LP
#
# Redistribution and use of this software in source and binary forms,
# with or without modification, are permitted provided that the
# following conditions are met:
#
#   Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer
#   in the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

load_module "/usr/lib64/nginx/modules/ngx_http_perl_module.so";

env NEXTHOP;
env NEXTHOPPORT;
env EUCAHOME;

events {
    worker_connections  1024;
}

http {

    perl_set $p_nexthop '
    sub {
        return($ENV{NEXTHOP});
    }
    ';

    perl_set $p_nexthop_port '
    sub {
        return($ENV{NEXTHOPPORT});
    }
    ';

    perl_set $p_eucahome '
    sub {
        return($ENV{EUCAHOME});
    }
    ';

    perl_set $p_inst '
    use nginx;
    sub {
        my $r = shift;
        my $client = $r->variable("remote_addr");
        my $ret = "";
        my $eucahome = $r->variable("eucahome");
        open(FH, "$eucahome/var/run/eucalyptus/eucanetd_intip_eni_map");
        while(<FH>) {
            chomp;
            my ($a, $b, $c, $d) = split(/\s+/, $_);
            if ($a eq $client) {
                $ret = "$b";
                last;
            }
        }
        close(FH);
        if (!$ret) {
           $ret = "UNSET";
        }
        return($ret);
    }
    ';

    server {
        listen 169.254.169.254:80;
        location / {
            set $eucahome $p_eucahome;
            proxy_set_header Host $host;
            proxy_set_header Euca-Instance-Id $p_inst;
            proxy_pass http://${p_nexthop}:${p_nexthop_port};
        }
        location /euca_md_status {
            stub_status on;
            access_log off;
        }
    }

}