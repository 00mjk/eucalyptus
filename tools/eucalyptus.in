#!/bin/bash
#
# Init script for the Eucalyptus services.
#
# chkconfig: 2345 99 05
# description: script for starting and stopping eucalyptus
#
# $Id: eucalyptus.in,v 1.6 2009-01-06 00:14:41 graziano Exp $
#

# Do NOT "set -e"

# if we are on rocks we need the rocks binaries 
[ -e /etc/profile.d/rocks-binaries.sh ] && . /etc/profile.d/rocks-binaries.sh

# I just wanted to set PATH to be the system PATH, but if a user install
# eucalyptus manually, it may have binaries in a non-standard position:
# hence we need to keep the PATH we receive.
PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH
DESC="Eucalyptus services"
START_CC="N"
START_NC="N"
START_CLOUD="N"
NAME=eucalyptus
BRCTL="`which brctl 2> /dev/null`"
ANT="`which ant 2> /dev/null`"
JAVA="`which java 2> /dev/null`"
MODPROBE="`which modprobe 2> /dev/null`"

# honor the ENV variable if found otherwise look in root
if [ -z "$EUCALYPTUS" ] ; then
	EUCALYPTUS="@prefix@"
fi
export EUCALYPTUS

check_java() {
	java_min_version="1.6.0"

	
	#  let's check the default java
	if [ -n "$JAVA" ]; then
		java_version=`java -version 2>&1 | grep "java version" | sed -e 's/.*java version "\(.*\)".*/\1/'`
		if [ `expr $java_version "<" $java_min_version` -eq 0 ]; then
			return 
		fi
	fi

	# we don't have a good java, let's look at JAVA_HOME (defined one
	# or the one which was defined at compile time)
	if [ -z "$JAVA_HOME" ]; then
		JAVA_HOME="@JAVA_HOME@"
	fi
	JAVA="$JAVA_HOME/bin/java"

	# let's see if we can find a decent java
	if [ -x "$JAVA" ]; then
		java_version=`$JAVA -version 2>&1 | grep "java version" | sed -e 's/.*java version "\(.*\)".*/\1/'`
		if [ `expr $java_version "<" $java_min_version` -eq 0 ]; then
			export JAVA_HOME
			return 
		fi
	fi

	echo "Eucalyptus needs java version >= $java_min_version"
	exit 1
}
enable_service() {
	for x in ${1}; do 
		# do we have a disabled service?
		if [ -d $AXIS2C_HOME/$x ]; then
			if [ ! -d $AXIS2C_HOME/services/$x ]; then
				mv $AXIS2C_HOME/$x $AXIS2C_HOME/services
			fi
		fi
	done
}
disable_service() {
	for x in ${1}; do 
		if [ -d $AXIS2C_HOME/services/$x ]; then
			# if we have an old version (or a copy from a
			# eucalyptus-interrupted) we remove it
			if [ -e $AXIS2C_HOME/$x ]; then
				rm -rf $AXIS2C_HOME/$x
			fi
			mv $AXIS2C_HOME/services/$x $AXIS2C_HOME
		fi
	done
}
create_httpd_config() {
	if [ -x "/opt/rocks/bin/rocks" ]; then
		# we are in the frontend: let's get frontend IP
		MYNAME=`hostname -s`
		IPS="127.0.0.1"
		for x in "`/opt/rocks/bin/rocks list host interface $MYNAME|sed '1d'|tr -s ' '|cut -f 4 -d ' '|tr -s '\n' ' '`"; do 
			IPS="$IPS $x"
		done
	else
		IPS="all"
	fi
	
	# let's configure the common parts for both CC and NC
#	cat $EUCALYPTUS/etc/eucalyptus/httpd.conf |sed "s|EUCALYPTUS|$EUCALYPTUS|"|sed "s|AXIS2C_HOME|$AXIS2C_HOME|"|sed "s|\(ServerRoot\).*|\1 "$HTTPD_HOME"|"  >  $EUCALYPTUS/etc/eucalyptus/httpd-tmp.conf
	cat $EUCALYPTUS/etc/eucalyptus/httpd.conf |sed "s|EUCALYPTUS|$EUCALYPTUS|"|sed "s|AXIS2C_HOME|$AXIS2C_HOME|"|sed "s|\(ServerRoot\).*|\1 "$HTTPD_HOME"|" |sed "s|EUCA_USER|$EUCA_USER|" >  $EUCALYPTUS/etc/eucalyptus/httpd-tmp.conf

	# Ubuntu: needs to load authz 
	if [ -e /usr/lib/apache2/modules/mod_authz_host.so ]; then
		echo "LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so" >> $EUCALYPTUS/etc/eucalyptus/httpd-tmp.conf
	fi

	# let's configure the CC 
	cat $EUCALYPTUS/etc/eucalyptus/httpd-tmp.conf |sed "s|\(Listen\).*|\1 $CC_PORT|"|sed "s|\(PidFile\).*|\1 $EUCALYPTUS/var/run/eucalyptus/httpd-cc.pid|"|sed "s|\(Allow from\).*|\1 $IPS|"|sed "s|\(ErrorLog\).*|\1 $EUCALYPTUS/var/log/eucalyptus/httpd-cc_error_log|"|sed "s|\(StartServers\).*|\1 5|"|sed "s|\(MinSpareServers\).*|\1 5|"|sed "s|\(MaxSpareServers\).*|\1 10|"|sed "s|\(MaxClients\).*|\1 25|" |sed "s|\(MinSpareThreads\).*|\1 5|" | sed "s|\(MaxSpareThreads\).*|\1 10|" | sed "s|\(ThreadsPerChild\).*|\1 25|">  $EUCALYPTUS/etc/eucalyptus/httpd-cc.conf

	# and the NC
	cat $EUCALYPTUS/etc/eucalyptus/httpd-tmp.conf |sed "s|\(Listen\).*|\1 $NC_PORT|"|sed "s|\(PidFile\).*|\1 $EUCALYPTUS/var/run/eucalyptus/httpd-nc.pid|"|sed "s|\(Allow from\).*|\1 $IPS|"|sed "s|\(ErrorLog\).*|\1 $EUCALYPTUS/var/log/eucalyptus/httpd-nc_error_log|" >  $EUCALYPTUS/etc/eucalyptus/httpd-nc.conf
}

# crude way to start the axis2c services
do_start() {
	# let's recuperate disabled services, in case the user changed the
	# configuration
	enable_service "EucalyptusNC EucalyptusCC"

	# some basic checks
	if [ "$START_NC" = "Y" ]; then
		# we have a program to test xen and more for the NC
		if [ ! -x $EUCALYPTUS/usr/sbin/euca_test_nc ]; then
			echo "Cannot check Node Controller: missing euca_test_nc."
		elif ! $EUCALYPTUS/usr/sbin/euca_test_nc $HYPERVISOR > $EUCALYPTUS/var/log/eucalyptus/euca_test_nc.log 2>&1 ; then
			echo "Node Controller cannot be started: errors in $EUCALYPTUS/var/log/eucalyptus/euca_test_nc.log"
			exit 1
		fi

		# NC needs the instance path
		if [ -z "$INSTANCE_PATH" -o "$INSTANCE_PATH" = "not_configured" -o ! -d "$INSTANCE_PATH" ]; then
			echo "INSTANCE_PATH is not valid!"
			exit 1
		fi

		# on SYSTEM or STATIC mode the bridge needs to exists
		if [ "$VNET_MODE" = "SYSTEM" -o "$VNET_MODE" = "STATIC" ]; then
			if [ -n "$BRCTL" -a -x $BRCTL ]; then
				if ! $BRCTL show |grep $VNET_BRIDGE > /dev/null 2> /dev/null ; then
					echo
					echo "Warning! Cannot find bridge $VNET_BRIDGE: instances may be without net"
				fi
			fi
		fi

		# we need aoe loaded 
		if [ -z "$MODPROBE" ]; then
			echo "Cannot find modprobe: you may have problems."
		elif ! $MODPROBE aoe ; then
			echo "Failed to load aoe: you may experience problems"
		fi

		# if both the NC and the CC are starting they need != ports
		if [ "$START_CC" = "Y" ]; then
			if [ "$NC_PORT" = "$CC_PORT" ]; then
				# we cannot run within only one httpd
				echo "CC and NC needs to be on different ports!"
				exit 1
			fi
		fi
	fi
	
	if [ "$START_CC" = "Y" -o "$START_NC" = "Y" ]; then
		if [ ! -x $HTTPD ]; then
			echo "cannot find httpd (was set to <$HTTPD>)!"
			exit 1
		fi

		# both the NC and CC needs to have ip forwarding
		# if we managed the network
		if [ "$VNET_MODE" = "MANAGED" ]; then
			if [ ! -w /proc/sys/net/ipv4/ip_forward ]; then
				echo "You need to enable IP forwarding for eucalyptus to use MANAGED mode!"
				exit 1
			fi
			echo -n 1 > /proc/sys/net/ipv4/ip_forward
		fi

	fi

	# let's be sure we have the right port for NC and CC
	create_httpd_config

	# let's do some basic checkings depending on what we want to run
	if [ "$START_CC" = "Y" ]; then
		if [ -z "$NODES" ]; then
			echo "NODES is empty in configuration file!" 
			exit 1
		fi

		# if in MANAGED or STATIC mode, we need to use
		# dhcpd, so better check we know how to use it
		if [ "$VNET_MODE" = "MANAGED" -o "$VNET_MODE" = "STATIC" ]; then
			if [ -z "$VNET_DHCPDAEMON" -o ! -x $VNET_DHCPDAEMON ]; then
				echo "Cannot find dhcp server!"
				exit 1
			fi
			if ! $VNET_DHCPDAEMON --help 2>&1 |grep -- -tf > /dev/null ; then
				echo "dhcp server doesn't accept -tf option!"
			fi
		fi
		
		# now we start the services
		if [ "$START_NC" = "Y" ]; then
			# we need 2 httpd
			if  ! $HTTPD -f $EUCALYPTUS/etc/eucalyptus/httpd-cc.conf ; then
				echo
				echo "Failed to start the CC!"
				exit 1
			fi
			echo -n " CC"

			if ! $HTTPD -f $EUCALYPTUS/etc/eucalyptus/httpd-nc.conf ; then
				echo
				echo "Failed to start the NC!"
				exit 1
			fi
			echo -n " NC"
		else 
			# just the CC running
			disable_service "EucalyptusNC"
			if ! $HTTPD -f $EUCALYPTUS/etc/eucalyptus/httpd-cc.conf ; then
				echo
				echo "Failed to start the CC!"
				exit 1
			fi
			echo -n " CC"
		fi
	elif [ "$START_NC" = "Y" ]; then
		disable_service "EucalyptusCC"
		if ! $HTTPD -f $EUCALYPTUS/etc/eucalyptus/httpd-nc.conf ; then
			echo
			echo "Failed to start the NC!"
			exit 1
		fi
		echo -n " NC"
	elif [ "$START_CLOUD" != "Y" ]; then
		echo "No service to start?"
	fi
	# and starts the cloud 
	if [ "$START_CLOUD" = "Y" ]; then
		# let's be sure we have java
		check_java

		cd $EUCALYPTUS/etc/eucalyptus
		(su $EUCA_USER -c "/bin/bash $ANT -f cloud.xml run" > $EUCALYPTUS/var/log/eucalyptus/cloud-output.log 2>&1)  &
		echo "$!" > $EUCALYPTUS/var/run/eucalyptus/cloud.pid
		echo -n " CLC"
	fi
}

do_stop() {
	# now kill the services
	for x in `/bin/ls $EUCALYPTUS/var/run/eucalyptus/*pid $EUCALYPTUS/var/run/eucalyptus/net/*.pid 2> /dev/null` ; do 
		if [ -s "$x" ]; then
			kill `cat $x 2> /dev/null` 2> /dev/null >/dev/null
		fi
	done
	# let's way few seconds than kill harder
	sleep 5
	for x in `/bin/ls $EUCALYPTUS/var/run/eucalyptus/*pid $EUCALYPTUS/var/run/eucalyptus/net/*.pid 2> /dev/null` ; do 
			kill -9 `cat $x 2> /dev/null` 2> /dev/null >/dev/null
			rm -f $x
	done
}

# Read configuration variable file if it is present
if [ -r $EUCALYPTUS/etc/eucalyptus/$NAME.conf ]; then
	. $EUCALYPTUS/etc/eucalyptus/$NAME.conf
else
	echo "Cannot find eucalyptus configuration file!"
	exit 1
fi
if [ "$EUCALYPTUS" = "not_configured" ]; then
	echo "EUCALYPTUS not configured!" 
	exit 1
fi
if [ -n "$TEMPLATE_PATH" ]; then
	echo "TEMPLATE_PATH is defined: do you have an old configuration?"
	exit 1
fi

START_CLOUD="`echo $START_CLOUD | tr 'a-z' 'A-Z'`"
START_CC="`echo $START_CC | tr 'a-z' 'A-Z'`"
START_NC="`echo $START_NC | tr 'a-z' 'A-Z'`"
if [ -z "$EUCA_USER" ] ; then
	EUCA_USER="root"
fi

# let's see if the user exists
ID="`which id 2> /dev/null`"
if [ -n "$ID" ]; then
	if ! $ID $EUCA_USER > /dev/null 2> /dev/null ; then
		echo "User $EUCA_USER doesn't exists!"
		exit 1
	fi
fi

# let's try to pick the system apache2
HTTPD="`which apache2 2> /dev/null`"		# .deb based machines
if [ -z  "$HTTPD" ]; then
	HTTPD="`which httpd 2> /dev/null`"	# .rpm based machines
fi
HTTPD_HOME="/tmp/"

# set up eucalyptus var locations to be owned by EUCA_USER
for y in $EUCALYPTUS/var/eucalyptus/ $EUCALYPTUS/var/run/eucalyptus/ $EUCALYPTUS/var/log/eucalyptus/ $INSTANCE_PATH; do
    if [ $y != "/" -a -d $y ]; then
	chown -R $EUCA_USER:$EUCA_USER $y
    fi
done
if [ -x "$EUCALYPTUS/usr/share/eucalyptus/euca_rootwrap" ]; then
    chown root:$EUCA_USER $EUCALYPTUS/usr/share/eucalyptus/euca_rootwrap
    chmod 4750 $EUCALYPTUS/usr/share/eucalyptus/euca_rootwrap
fi

# let's find our dependencies
for y in $EUCALYPTUS/opt $EUCALYPTUS/packages $EUCALYPTUS /opt ; do
	for x in `/bin/ls $y 2> /dev/null`; do
		# this is for the RPM installed pacakges
		if [ "$x" = "euca-libvirt" ]; then
			export LIBVIRT_HOME="$y/$x"
		fi
		if [ "$x" = "euca-httpd" ]; then
			export HTTPD=$y/$x/bin/httpd
			export HTTPD_HOME="$y/$x"
		fi
		if [ "$x" = "euca-axis2c" ]; then
			export AXIS2C_HOME="$y/$x"
		fi
		# this is for system or source installed
		if [ "`echo $x | cut -f 1 -d -`" = "axis2c" ]; then
			export AXIS2C_HOME="$y/$x"
		fi
		if [ "`echo $x | cut -f 1 -d -`" = "libvirt" ]; then
			export LIBVIRT_HOME="$y/$x"
		fi
		if [ "`echo $x | cut -f 1 -d -`" = "httpd" ]; then
			if [ -x $y/$x/bin/httpd ]; then
				export HTTPD="$y/$x/bin/httpd"
				export HTTPD_HOME="$y/$x"
			elif [ -x $y/$x/usr/bin/httpd ]; then
				export HTTPD="$y/$x/usr/bin/httpd"
				export HTTPD_HOME="$y/$x"
			elif [ -x $y/$x/usr/sbin/httpd ]; then
				export HTTPD="$y/$x/usr/sbin/httpd"
				export HTTPD_HOME="$y/$x"
			fi
		fi
	done
done

# finally let's see if the basics tools are here
if [ "$START_CC" = "Y" -o "$START_NC" = "Y" ]; then
	if [ -z "$AXIS2C_HOME" ]; then
		echo "Cannot find Eucalyptus webservices: missing AXIS2C_HOME?"
		exit 1
	fi
fi

# set the library path correctly
export LD_LIBRARY_PATH="$AXIS2C_HOME/lib:$LIBVIRT_HOME/lib:$LIBVIRT_HOME/usr/lib:$EUCALYPTUS/lib:$LD_LIBRARY_PATH"

case "$1" in
  start)
	echo -n "Starting $DESC: "
	# start and stop are hard: we loose the CC state
	rm -f /dev/shm/*eucalyptus*
	do_start
	echo "."
	;;
  stop)
	echo -n "Stopping ALL $DESC: "
	# start and stop are hard: we loose the CC state
	do_stop
	rm -f /dev/shm/*eucalyptus*
	echo "done."
	;;
  restart)
  	echo -n "Restarting $DESC: "
	# restart allow the CC to mantain the state across restart
	do_stop
	sleep 3
	do_start
	echo "."
  	;;
  *)
	echo "Usage: $NAME {start|stop|restart}" >&2
	exit 3
	;;
esac

:
