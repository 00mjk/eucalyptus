diff --git a/boto/roboto/awsqueryrequest.py b/boto/roboto/awsqueryrequest.py
index 4b4dffe..f3cee3e 100644
--- a/boto/roboto/awsqueryrequest.py
+++ b/boto/roboto/awsqueryrequest.py
@@ -117,6 +117,7 @@ class AWSQueryRequest(object):
 
     Description = ''
     Params = []
+    Args = []
     Filters = []
     Response = {}
 
@@ -197,10 +198,34 @@ class AWSQueryRequest(object):
                     if param.name in required:
                         required.remove(param.name)
                     Encoder.encode(param, self.request_params,
-                                   self.args[python_name])
+                                   value)
+                elif not value and param.default:
+                    if param.name in required:
+                        required.remove(param.name)
+                    Encoder.encode(param, self.request_params,
+                                   param.default)
                 del self.args[python_name]
-        if required:
-            raise RequiredParamError(required)
+            elif param.optional and param.default:
+                Encoder.encode(param, self.request_params,
+                               param.default)
+                
+        required_args = [a.name for a in self.Args if not a.optional]
+        for arg in self.Args:
+            if len(self.cli_args) == 0:
+                continue
+            elif arg.long_name:
+                python_name = arg.long_name.replace('-', '_')
+            else:
+                python_name = boto.utils.pythonize_name(arg.name, '_')
+            value = self.cli_args.pop()
+            if value is not None:
+                if arg.name in required_args:
+                    required_args.remove(arg.name)
+                Encoder.encode(arg, self.request_params,
+                               value)
+                
+        if required or required_args:
+            raise RequiredParamError({"params":required,"args":required_args})
         boto.log.debug('request_params: %s' % self.request_params)
         self.process_markers(self.Response)
 
@@ -208,7 +233,7 @@ class AWSQueryRequest(object):
         if fmt and fmt['type'] == 'object':
             for prop in fmt['properties']:
                 self.process_markers(prop, fmt['name'])
-        elif fmt['type'] == 'array':
+        elif fmt and fmt['type'] == 'array':
             self.list_markers.append(prev_name)
             self.item_markers.append(fmt['name'])
         
@@ -323,7 +348,11 @@ class AWSQueryRequest(object):
                     fp.close()
                 else:
                     self.parser.error('Unable to read file: %s' % path)
-                d[p_name] = value
+            d[p_name] = value
+        if self.Args is not None:
+            for positional in self.Args:
+                p_name = positional.name
+                d[p_name] = 'string'
         self.args.update(d)
         try:
             self.process_args()
diff --git a/boto/roboto/param.py b/boto/roboto/param.py
index bd87905..37bad4f 100644
--- a/boto/roboto/param.py
+++ b/boto/roboto/param.py
@@ -80,7 +80,7 @@ class Param(object):
         self.doc = doc
         self.metavar = metavar
         self.cardinality = cardinality
-        self.default = None
+        self.default = default
 
     @property
     def optparse_long_name(self):
