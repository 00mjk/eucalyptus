<!--
  ~ Software License Agreement (BSD License)
  ~
  ~ Copyright (c) 2008, Regents of the University of California
  ~ All rights reserved.
  ~
  ~ Redistribution and use of this software in source and binary forms, with or
  ~ without modification, are permitted provided that the following conditions
  ~ are met:
  ~
  ~ * Redistributions of source code must retain the above
  ~   copyright notice, this list of conditions and the
  ~   following disclaimer.
  ~
  ~ * Redistributions in binary form must reproduce the above
  ~   copyright notice, this list of conditions and the
  ~   following disclaimer in the documentation and/or other
  ~   materials provided with the distribution.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ~ ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  ~ LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  ~ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  ~ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  ~ INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  ~ CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  ~ POSSIBILITY OF SUCH DAMAGE.
  ~
  ~ Author: Chris Grzegorczyk grze@cs.ucsb.edu
  -->

<project name="eucalyptus" basedir=".">
    <import file="modules/module-inc.xml"/>
    <import file="cloud.xml"/>
    <!--================================== other vars ==================================-->
    <loadfile srcfile="../VERSION" property="euca.version">
        <filterchain>
            <filterreader classname="org.apache.tools.ant.filters.StripLineBreaks"/>
        </filterchain>
    </loadfile>
    <property name="jvm.heap" value="1g"/>
    <property name="deps.url" value="http://eucalyptus.cs.ucsb.edu/dependencies/${euca.version}"/>
    <property name="deps.dir" value="deps"/>
    <property name="deps.lib.dir" value="lib"/>
    <property name="deps.lib" value="cloud-lib"/>
    <property name="deps.deploy" value="cloud-deploy"/>
    <!--================================== build targets ==================================-->
    <target name="build-crypto" depends="untar">
        <ant dir="modules/crypto" inheritall="false"/>
    </target>
    <target name="build-workarounds" depends="build-crypto">
        <ant dir="modules/workarounds" inheritall="false"/>
    </target>
    <target name="build-msgs" depends="build-workarounds">
        <ant dir="modules/msgs" inheritall="false"/>
    </target>
    <target name="build-core" depends="build-msgs">
        <ant dir="modules/core" inheritall="false"/>
    </target>
    <target name="build-www" depends="build-eucalyptus-ws">
        <ant dir="modules/www" inheritall="false"/>
    </target>
    <target name="build-transport" depends="build-core">
        <ant dir="modules/axis2-transport" inheritall="false"/>
    </target>
    <target name="build-eucalyptus-ws" depends="build-transport">
        <ant dir="modules/interface" inheritall="false"/>
        <ant dir="modules/cluster-manager" inheritall="false"/>
        <ant dir="modules/image-manager" inheritall="false"/>
        <ant dir="modules/group-manager" inheritall="false"/>
        <ant dir="modules/key-manager" inheritall="false"/>
    </target>
    <target name="build-walrus-ws" depends="build-transport">
        <ant dir="modules/storage-manager" inheritall="false"/>
    </target>
    <target name="build-ebs-ws" depends="build-transport">
        <ant dir="modules/storage-controller" inheritall="false"/>
    </target>
    <target name="build-eucalyptus" depends="build-core,build-www,build-eucalyptus-ws"/>
    <target name="build-walrus" depends="build-walrus-ws"/>
    <target name="build-ebs" depends="build-ebs-ws"/>
    <target name="build" depends="build-eucalyptus,build-walrus,build-ebs"/>
    <!--================================== clean targets ==================================-->
    <target name="clean-workarounds">
        <ant dir="modules/workarounds" inheritall="false" target="clean"/>
    </target>
    <target name="clean-crypto" depends="clean-workarounds">
        <ant dir="modules/crypto" inheritall="false" target="clean"/>
    </target>
    <target name="clean-msgs" depends="clean-crypto">
        <ant dir="modules/msgs" inheritall="false" target="clean"/>
    </target>
    <target name="clean-core" depends="clean-msgs">
        <ant dir="modules/core" inheritall="false" target="clean"/>
    </target>
    <target name="clean-www" depends="clean-eucalyptus-ws">
        <ant dir="modules/www" inheritall="false" target="clean"/>
    </target>
    <target name="clean-transport" depends="clean-core">
        <ant dir="modules/axis2-transport" inheritall="false" target="clean"/>
    </target>
    <target name="clean-eucalyptus-ws" depends="clean-transport">
        <ant dir="modules/interface" inheritall="false" target="clean"/>
        <ant dir="modules/cluster-manager" inheritall="false" target="clean"/>
        <ant dir="modules/image-manager" inheritall="false" target="clean"/>
        <ant dir="modules/group-manager" inheritall="false" target="clean"/>
        <ant dir="modules/key-manager" inheritall="false" target="clean"/>
    </target>
    <target name="clean-walrus-ws" depends="clean-transport">
        <ant dir="modules/storage-manager" inheritall="false" target="clean"/>
    </target>
    <target name="clean-ebs-ws" depends="clean-transport">
        <ant dir="modules/storage-controller" inheritall="false" target="clean"/>
    </target>
     <target name="clean-eucalyptus" depends="clean-core,clean-www,clean-eucalyptus-ws"/>
    <target name="clean-walrus" depends="clean-walrus-ws"/>
    <target name="clean-ebs" depends="clean-ebs-ws"/>
    <target name="clean" depends="clean-eucalyptus,clean-walrus,clean-ebs">
        <delete dir="${target.dir}"/>
    </target>
    <target name="distclean" depends="clean">
        <delete dir="${deps.dir}"/>
        <delete dir="${deps.lib.dir}"/>
    </target>
    <!--================================== install target ==================================-->
    <target name="install" depends="build-eucalyptus,build-ebs,build-walrus">
        <!-- copy libraries over -->
        <mkdir dir="${euca.lib.dir}"/>
        <copy todir="${euca.lib.dir}">
            <fileset dir="${basedir}/target">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <copy todir="${euca.lib.dir}">
            <fileset dir="${basedir}/lib">
                <include name="**/*"/>
            </fileset>
        </copy>
        <untar src="${deps.dir}/${deps.deploy}.tar" dest="${euca.var.dir}"/>
        <untar src="${deps.dir}/${deps.lib}.tar" dest="${euca.lib.dir}"/>
        <mkdir dir="${euca.conf.dir}"/>
<!--	<chmod dir="${euca.conf.dir}" perm="0755"/> -->
        <mkdir dir="${euca.var.dir}/"/>
        <mkdir dir="${euca.var.dir}/webapps"/>
        <mkdir dir="${euca.var.dir}/db"/>
        <mkdir dir="${euca.var.dir}/images"/>
        <mkdir dir="${euca.var.dir}/keys"/>
        <mkdir dir="${euca.var.dir}/services"/>
        <mkdir dir="${euca.var.dir}/webapps"/>
        <mkdir dir="${euca.var.dir}/modules"/>
        <mkdir dir="${euca.log.dir}"/>
        <ant dir="modules/workarounds" inheritall="false" target="install"/>
        <ant dir="modules/crypto" inheritall="false" target="install"/>
        <ant dir="modules/msgs" inheritall="false" target="install"/>
        <ant dir="modules/core" inheritall="false" target="install"/>
        <ant dir="modules/www" inheritall="false" target="install"/>
        <ant dir="modules/axis2-transport" inheritall="false" target="install"/>
        <ant dir="modules/interface" inheritall="false" target="install"/>
        <ant dir="modules/cluster-manager" inheritall="false" target="install"/>
        <ant dir="modules/image-manager" inheritall="false" target="install"/>
        <ant dir="modules/group-manager" inheritall="false" target="install"/>
        <ant dir="modules/key-manager" inheritall="false" target="install"/>
        <ant dir="modules/storage-manager" inheritall="false" target="install"/>
        <ant dir="modules/storage-controller" inheritall="false" target="install"/>
    </target>
    <!--================================== unzipping target ==================================-->
    <target name="untar" depends="unzip">
        <untar src="${deps.dir}/${deps.lib}.tar" dest="${deps.lib.dir}"/>
    </target>
    <target name="unzip" depends="testZip" if="needUnzipping">
        <gunzip src="${deps.dir}/${deps.lib}.tar.gz"/>
        <gunzip src="${deps.dir}/${deps.deploy}.tar.gz"/>
    </target>
    <target name="testZip">
       <condition property="needUnzipping">
          <and>
             <available file="${deps.dir}/${deps.lib}.tar.gz"/>
             <available file="${deps.dir}/${deps.deploy}.tar.gz"/>
          </and>
       </condition>
    </target>
    <!--================================== DEPS TARGET ==================================-->
    <available property="has.deps" filepath="${basedir}/lib/jibx/" file="jibx-run.jar"/>
    <target name="deps" unless="has.deps">
        <mkdir dir="${deps.dir}"/>
        <mkdir dir="${deps.lib.dir}"/>
        <!--===========  download the dependency libraries  ===========-->
        <get src="${deps.url}/${deps.lib}.tar.gz" dest="${deps.dir}/${deps.lib}.tar.gz"/>

        <gunzip src="${deps.dir}/${deps.lib}.tar.gz"/>
        <untar src="${deps.dir}/${deps.lib}.tar" dest="${deps.lib.dir}"/>

        <!--===========  download the deployments/modules ===========-->
        <get src="${deps.url}/${deps.deploy}.tar.gz" dest="${deps.dir}/${deps.deploy}.tar.gz"/>

        <gunzip src="${deps.dir}/${deps.deploy}.tar.gz"/>

    </target>
</project>
